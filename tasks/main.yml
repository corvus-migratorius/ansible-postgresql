---
- name: "Get Docker version"
  changed_when: false
  ansible.builtin.command:
    cmd: docker --version

- name: "Check that Docker Compose is available"
  changed_when: false
  ansible.builtin.command:
    cmd: docker compose --version

- name: "Create project directories"
  loop:
    - { name: "{{ project_root }}", owner: "root", group: "root", mode: "0770" }
    - { name: "{{ project_root }}/secrets", owner: "root", group: "root", mode: "0770" }
    - { name: "{{ db_data_dir }}", owner: "999", group: "999", mode: "0700" }
  ansible.builtin.file:
    state: directory
    path: "{{ item.name }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"

- name: "Template the Compose file"
  notify: "Re-create PostgreSQL container"
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ project_root }}/docker-compose.yaml"
    owner: root
    group: root
    mode: "0700"

- name: "Copy db secret files"
  notify: "Re-create PostgreSQL container"
  loop:
    - {src: "{{ secrets_dir }}/user-name.txt", dest: "{{ project_root }}/secrets/user-name.txt"}
    - {src: "{{ secrets_dir }}/user-password.txt", dest: "{{ project_root }}/secrets/user-password.txt"}
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0600"

# - name: "Install PostgreSQL client tools"
#   ansible.builtin.apt:
#     name: postgresql-client
#     state: present

- name: "Install psycopg2 Python package"
  ansible.builtin.pip:
    name: psycopg2-binary
    state: present
